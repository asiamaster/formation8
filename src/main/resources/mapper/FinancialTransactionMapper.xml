<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.formation8.dao.FinancialTransactionMapper">
  <resultMap id="BaseResultMap" type="com.dili.formation8.domain.FinancialTransaction">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_number" jdbcType="VARCHAR" property="transactionNumber" />
    <result column="transaction_type" jdbcType="INTEGER" property="transactionType" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="transaction_amount" jdbcType="BIGINT" property="transactionAmount" />
    <result column="balance" jdbcType="BIGINT" property="balance" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="payment_pattern" jdbcType="INTEGER" property="paymentPattern" />
    <result column="target_user_id" jdbcType="BIGINT" property="targetUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, transaction_number, transaction_type, user_id, transaction_amount, balance, payment_time, 
    payment_pattern, target_user_id
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from financial_transaction
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.formation8.domain.FinancialTransaction">
    <!--
      WARNING - @mbg.generated
    -->
    update financial_transaction
    <set>
      <if test="transactionNumber != null">
        transaction_number = #{transactionNumber,jdbcType=VARCHAR},
      </if>
      <if test="transactionType != null">
        transaction_type = #{transactionType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="transactionAmount != null">
        transaction_amount = #{transactionAmount,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentPattern != null">
        payment_pattern = #{paymentPattern,jdbcType=INTEGER},
      </if>
      <if test="targetUserId != null">
        target_user_id = #{targetUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>